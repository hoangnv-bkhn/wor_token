name: Issue Assignment

on:
  issue_comment:
    types: [created]
  schedule:
    - cron: '*/5 * * * *'  # Run every 5 minutes

jobs:
  assign_issue:
    if: github.event_name == 'issue_comment'
    runs-on: ubuntu-latest
    steps:
      - name: Check for /assign-me comment
        uses: actions/github-script@v7
        with:
          script: |
            const comment = context.payload.comment.body;
            if (comment.includes('/assign-me')) {
              const issue_number = context.issue.number;

              // Assign the issue to the user who commented
              await github.rest.issues.addAssignees({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue_number,
                assignees: [context.actor]
              });

              // Add the '📍 Assigned' label to the issue
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue_number,
                labels: ['📍 Assigned']
              });
            }

  unassign_stale:
    runs-on: ubuntu-latest
    steps:
      - name: Mark stale issues
        uses: actions/stale@v4
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          stale-issue-message: 'This issue has been automatically unassigned due to inactivity.'
          days-before-stale: 0.003472  # Number of days before marking as stale
          exempt-issue-labels: '📌 Pinned'
          remove-stale-when-updated: false
          only-labels: '📍 Assigned'
          operations-per-run: 30
      - name: Unassign stale issues
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            
              const staleIssues = await github.paginate(github.rest.issues.listForRepo, {
                owner,
                repo,
                state: 'open',
                labels: 'Stale',
                assignee: '*'
              });
              
              for (const issue of staleIssues) {
                await github.rest.issues.removeAssignees({
                  owner,
                  repo,
                  issue_number: issue.number,
                  assignees: issue.assignees.map(a => a.login)
                });
                
                await github.rest.issues.createComment({
                  owner,
                  repo,
                  issue_number: issue.number,
                  body: 'This issue has been automatically unassigned due to inactivity.'
                });
                
                console.log(`Unassigned issue #${issue.number}`);
            }   
